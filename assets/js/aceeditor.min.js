function textAreaToAceEditor(e) { if (!e || "textarea" !== e.tagName.toLowerCase()) return console.warn("Addon aceeditor: Invalid Parameter for function textAreaToAceEditor()! Use only <textarea> as parameter!"), null; if ("true" === e.getAttribute("data-aceactive")) return null; let i = document.createElement("div"); e.parentNode.insertBefore(i, e); let o = ace.edit(i); if (o.getSession().setValue(e.value), default_options = { showLineNumbers: !0, showGutter: !0, showInvisibles: !1, fontSize: 15, mode: "ace/mode/php" }, "object" == typeof rex) try { ace_options = JSON.parse(rex.aceeditor_options) } catch (e) { ace_options = default_options, console.warn("Addon aceeditor: Error in aceeditor-Options! Using minimum default configuration!\n" + e) } else ace_options = default_options; if (null !== e.getAttribute("readonly") && o.setReadOnly(!0), add_options = e.getAttribute("aceeditor-options"), null !== add_options) { try { new_options = JSON.parse(add_options) } catch (e) { new_options = {}, console.warn("Addon aceeditor: Error in Attribute aceeditor-options! Options ignored!") } ace_options = Object.assign(ace_options, new_options) } var t, r, n, a; o.setOptions(ace_options), i.style.width = (t = e, r = o.getOptions().fontSize, t.classList.contains("rex-js-code") ? "100%" : null !== t.getAttribute("aceeditor-width") ? t.getAttribute("aceeditor-width") : null !== t.getAttribute("width") ? Number.isInteger(parseInt(t.getAttribute("width"))) ? t.getAttribute("width") + "px" : t.getAttribute("width") : null !== t.getAttribute("cols") ? (width = Number(Number(t.getAttribute("cols")) + 1) * (Number(r) / 1.5), width + "px") : (width = t.offsetWidth, width < 400 ? "100%" : width + "px")), i.style.height = (n = e, a = o.getOptions().fontSize, n.classList.contains("rex-js-code") ? "500px" : null !== n.getAttribute("aceeditor-height") ? n.getAttribute("aceeditor-height") : null !== n.getAttribute("height") ? Number.isInteger(parseInt(n.getAttribute("height"))) ? n.getAttribute("height") + "px" : n.getAttribute("height") : (null !== n.getAttribute("rows") ? height = 1.5 * Number(Number(n.getAttribute("rows")) + 1) * Number(a) : (height = n.offsetHeight, height < 200 && (height = 200)), height + "px")), e.style.display = "none", e.setAttribute("data-aceactive", "true"); let d = "eclipse"; "object" == typeof rex && (d = rex.aceeditor_defaulttheme); let s = !1; if ("object" == typeof rex) { let t = null; window.matchMedia && (t = window.matchMedia("(prefers-color-scheme: dark)"), t.matches && (d = rex.aceeditor_defaultdarktheme, s = !0), document.body.classList.contains("rex-theme-light") ? d = rex.aceeditor_defaulttheme : document.body.classList.contains("rex-theme-dark") && (d = rex.aceeditor_defaultdarktheme, s = !0), t.addEventListener("change", function (e) { t.matches ? (d = rex.aceeditor_defaultdarktheme, s = !0) : d = rex.aceeditor_defaulttheme, document.body.classList.contains("rex-theme-light") ? d = rex.aceeditor_defaulttheme : document.body.classList.contains("rex-theme-dark") && (d = rex.aceeditor_defaultdarktheme, s = !0) })) } var c = e.getAttribute("aceeditor-theme"); null !== c && (d = c), !0 !== s || null !== (c = e.getAttribute("aceeditor-themedark")) && (d = c), o.setTheme("ace/theme/" + d); e = e.getAttribute("aceeditor-mode"); return null !== e && o.getSession().setMode("ace/mode/" + e), !0 === s ? o.container.classList.add("acerexdarkmode") : o.container.classList.add("acerexmode"), o.container.style.lineHeight = 1.5, o.renderer.updateFontSize(), o.commands.addCommand({ name: "fullScreenF11", bindKey: { win: "F11", mac: "F11" }, exec: function (e) { e.container.classList.toggle("acefullscreen"), document.querySelector("html").classList.toggle("acefullscreenhtml"), e.resize() } }), o.commands.addCommand({ name: "fullScreenESC", bindKey: { win: "ESC", mac: "ESC" }, exec: function (e) { e.container.classList.toggle("acefullscreen"), document.querySelector("html").classList.toggle("acefullscreenhtml"), e.resize() } }), o.session.addEventListener("change", function (e) { let t = i.nextElementSibling; t.value = o.getSession().getValue() }), o } "function" == typeof $ && $(document).on("rex:ready", function () { var e, i = document.querySelectorAll(rex.aceeditor_selectors); 0 < i.length && ((e = document.createElement("script")).src = "../assets/addons/aceeditor/vendor/aceeditor/ace.js", document.head.appendChild(e), e.onload = function () { for (var e = 0; e < i.length; e++) { var t = i[e]; editor = textAreaToAceEditor(t) } }) });